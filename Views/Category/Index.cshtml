@model IEnumerable<Category> //this gets the model to this page and we can iterate it.
@{
    ViewData["Title"] = "Index";
}

    <div class="container p-3">
        <div class="row pt-2">
            <div class="col-6">
                <h4 class="text-primary">Category List</h4>
            </div>
            <div class="col-6 text-end">
                <a asp-controller="Category" asp-action="Create" class="btn btn-primary"><i class="bi bi-plus-circle"></i>&nbsp; Create new Category</a>
            </div>
        </div>
    </div>
@if (Model.Any())
    {
    <table class="table table-bordered table-striped" style="width:100%">
        <thead>
            <tr>
                <th>
                    Category Name
                </th>
                <th>
                    Display Order
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in Model)//.OrderBy(x=>x.DisplayOrder)
            {
                <tr>
                    <td width="50%">
                        @obj.Name.ToUpperInvariant()
                    </td>
                    <td width="30%">
                        @obj.DisplayOrder
                    </td>
                    <td>
                        <div class="w-75 btn-group" role="group">
                            <a asp-controller="Category" asp-action="Edit" asp-route-id="@obj.Id" class="btn btn-primary mx-2"><i class="bi bi-pencil-square"></i>Edit</a>
                        </div>
                    </td> 
                    <td>
                        <div class="w-75 btn-group" role="group">
                            <a asp-controller="Category" asp-action="Delete" asp-route-id="@obj.Id" class="btn btn-secondary "> <i class="bi bi-trash"> </i></a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else{
    <h2>Category is empty</h2>
}